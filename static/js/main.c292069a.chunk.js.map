{"version":3,"sources":["components/Card.js","config/axiosInstance.js","pages/Search.js","actions/index.js","enums/url.js","enums/mutations.js","App.js","reducers/index.js","store/configureStore.js","index.js"],"names":["CardTemplate","data","CardContent","Grid","container","spacing","item","xs","Typography","className","name","price","variant","component","description","color","furniture_style","join","delivery_time","$axios","axios","create","baseURL","process","timeout","deliveryTChoice","connect","furnitureStyles","furniture_styles","products","dispatch","getData","a","get","type","payload","props","React","useState","keyword","setKeyword","datares","setDatares","furnitureStyle","setfurnitureStyle","deliveryTime","setdeliveryTime","useEffect","filter","result","length","p","includes","some","v","indexOf","max","reduce","acc","c","curr","parseInt","style","background","justify","alignItems","sm","TextField","value","label","placeholder","onChange","input","target","fullWidth","FormControl","InputLabel","id","Select","multiple","labelId","e","renderValue","selected","map","furniture","MenuItem","key","ListItemText","primary","Checkbox","checked","Object","keys","delivery","md","h","i","theme","createMuiTheme","palette","main","contrastText","App","store","ThemeProvider","path","Search","rootReducer","combineReducers","state","action","loggerMiddleware","createLogger","preloadedState","createStore","applyMiddleware","thunkMiddleware","render","document","getElementById"],"mappings":"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","file":"static/js/main.c292069a.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../assets/css/Card.css\"\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nconst CardTemplate = ({ data }) => {\r\n  return (\r\n\r\n\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={9}>\r\n            <Typography className=\"bold\">\r\n              {data.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3} >\r\n            <Typography className=\"price bold\">\r\n              {data.price}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n\r\n            <Typography variant=\"body2\" component=\"p\">\r\n\r\n              {data.description}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n\r\n\r\n            <Typography color=\"primary\">\r\n              {data.furniture_style.join(\", \")}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography className=\"time bold\">\r\n              Delivery {data.delivery_time} days\r\n              </Typography>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n\r\n\r\n  );\r\n}\r\nexport default CardTemplate;\r\n","import axios from \"axios\";\r\n\r\nconst $axios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE,\r\n  timeout: 500000\r\n});\r\n\r\nexport default $axios;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Grid, InputLabel,\r\n  ListItemText,\r\n  Checkbox, TextField, Select, MenuItem,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport Card from \"../components/Card\";\r\nimport { getData } from '../actions';\r\n\r\nimport \"../assets/css/Search.css\"\r\n\r\nconst keywordLabel = \"Search Furniture\";\r\nconst furnitureSLabel = \"Furniture Style\";\r\nconst deliveryTLabel = \"Delivery Time\";\r\n\r\nconst deliveryTChoice = { \"1 week\": 7, \"2 weeks\": 14, \"1 month\": 30, \"more than 1 month\": -1 };\r\n\r\nconst Search = props => {\r\n\r\n  const [keyword, setKeyword] = React.useState('');\r\n  const [datares, setDatares] = React.useState([]);\r\n  const [furnitureStyle, setfurnitureStyle] = React.useState([]);\r\n  const [deliveryTime, setdeliveryTime] = React.useState([]);\r\n\r\n  //componentdidmount\r\n  useEffect(() => {\r\n    props.getData();\r\n  }, []);\r\n\r\n  //when props.product change\r\n  useEffect(() => {\r\n    filter();\r\n  }, [props.products]);\r\n\r\n  //on keyword, furnitureStyle, deliveryDay change\r\n  useEffect(() => {\r\n    filter();\r\n  }, [keyword,\r\n    furnitureStyle,\r\n    deliveryTime]);\r\n\r\n  const filter = () => {\r\n    let result = props.products;\r\n    if (keyword.length > 0) {\r\n      result = result.filter(p => p.name.includes(keyword))\r\n    }\r\n\r\n    if (furnitureStyle.length > 0) {\r\n      result = result.filter(p =>\r\n        p.furniture_style.some(v => furnitureStyle.indexOf(v) !== -1)\r\n      )\r\n    }\r\n    if (deliveryTime.length > 0) {\r\n      const max = deliveryTime.reduce((acc, c) => {\r\n        const curr = deliveryTChoice[c]\r\n        if (curr == -1 || acc == -1) {\r\n          return -1;\r\n        }\r\n        if (curr > acc) {\r\n          return curr\r\n        }\r\n        return acc;\r\n      }, 0);\r\n      if (max > 0) {\r\n        result = result.filter(p => parseInt(p.delivery_time) < max);\r\n      }\r\n\r\n      // const result2 = [];\r\n      // for (var i in deliveryTime) {\r\n      //   if (deliveryTime[i] == -1) {\r\n\r\n      //   } else {\r\n\r\n      //   }\r\n      //   const filtered = result.filter(p => p.delivery_time > deliveryTime[i] - 7 && p.delivery_time < deliveryTime[i])\r\n      //   result2 = [...result2, filtered]\r\n      // }\r\n\r\n      // result = result2;\r\n    }\r\n    setDatares(result);\r\n  }\r\n  return (\r\n    //\r\n    <div>\r\n      <div style={{ \"padding\": \"40px\", background: \"#106cc8\" }} className=\"dark\">\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              value={keyword}\r\n              label={keywordLabel}\r\n              placeholder={keywordLabel}\r\n              onChange={(input) => setKeyword(input.target.value)}\r\n              fullWidth\r\n              style={{ color: 'white' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}></Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl style={{ \"width\": \"100%\" }}>\r\n              <InputLabel id=\"furniturStyleL\">{furnitureSLabel}</InputLabel>\r\n              <Select\r\n                multiple\r\n                labelId=\"furniturStyleL\"\r\n                value={furnitureStyle}\r\n                onChange={(e) => { setfurnitureStyle(e.target.value) }}\r\n                renderValue={(selected) => selected.join(', ')}\r\n              >\r\n                {\r\n                  props.furnitureStyles && props.furnitureStyles.map((furniture) => (\r\n                    <MenuItem\r\n                      key={furniture} value={furniture}\r\n                    >\r\n                      <ListItemText primary={furniture} />\r\n                      <Checkbox checked={furnitureStyle.indexOf(furniture) > -1} />\r\n                    </MenuItem>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n\r\n            <FormControl style={{ \"width\": \"100%\" }}>\r\n              <InputLabel id=\"deliveryTimeL\">{deliveryTLabel}</InputLabel>\r\n              <Select\r\n                multiple\r\n                labelId=\"deliveryTimeL\"\r\n                value={deliveryTime}\r\n                onChange={(e) => {\r\n                  setdeliveryTime(e.target.value)\r\n\r\n                  // let days = [];\r\n                  // for (let i = 0; i < e.target.value.length; i++) {\r\n                  //   var index = deliveryTChoice.indexOf(e.target.value[i]);\r\n                  //   let day = 0\r\n                  //   switch (index) {\r\n                  //     case 0: day = 7; break;\r\n                  //     case 1: day = 14; break;\r\n                  //     case 2: day = 30; break;\r\n                  //     case 3: day = -1; break;\r\n                  //   }\r\n                  //   days.push(day);\r\n                  // }\r\n                  //setdeliveryDay(days);\r\n                }}\r\n                renderValue={(selected) => selected.join(', ')}\r\n              >\r\n                {\r\n                  Object.keys(deliveryTChoice).map(delivery => (\r\n                    <MenuItem\r\n                      key={delivery} value={delivery}\r\n                    >\r\n                      <ListItemText primary={delivery} />\r\n                      <Checkbox checked={deliveryTime.indexOf(delivery) > -1} />\r\n                    </MenuItem>\r\n                  )\r\n                  )\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n      <div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={10} md={8}>\r\n            <Grid container\r\n              spacing={4}\r\n              alignItems=\"center\">\r\n              {datares && datares.map((h, i) =>\r\n                <Grid item xs={12} sm={6} key={i}>\r\n                  <Card data={h} />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ data }) => {\r\n  const { furniture_styles: furnitureStyles, products } = data;\r\n  return {\r\n    furnitureStyles,\r\n    products\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  getData: () => dispatch(getData()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import $axios from '../config/axiosInstance';\r\nimport * as url from '../enums/url';\r\nimport {\r\n  GET_DATA\r\n} from '../enums/mutations';\r\n\r\nexport const getData = () => {\r\n  return async dispatch => {\r\n    const { data } = (await $axios.get(url.getData));\r\n    dispatch({\r\n      type: GET_DATA,\r\n      payload: data\r\n    })\r\n  }\r\n}\r\n\r\n","\r\nexport const getData = `v2/5c9105cb330000112b649af8`;\r\n","export const GET_DATA = 'GET_DATA';\r\n\r\nexport const PURCHASE = 'PURCHASE';\r\n\r\nexport const FAVORITE = 'FAVORITE';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Search from './pages/Search';\r\n\r\n\r\nimport './App.css';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#00acf0',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\nconst App = ({ store }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Search} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  </ThemeProvider>\r\n\r\n)\r\nApp.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\nexport default App\r\n","import {\r\n  combineReducers\r\n} from 'redux'\r\nimport {\r\n  GET_DATA\r\n} from '../enums/mutations'\r\n\r\nfunction data(state = {}, action) {\r\n  const {\r\n    type,\r\n    payload\r\n  } = action\r\n  switch (type) {\r\n    case GET_DATA:\r\n      state = payload\r\n      return state;\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  data\r\n})\r\nexport default rootReducer\r\n","import {\r\n  createStore,\r\n  applyMiddleware\r\n} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {\r\n  createLogger\r\n} from 'redux-logger'\r\nimport rootReducer from '../reducers'\r\nconst loggerMiddleware = createLogger()\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}\r\n","\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\nimport configureStore from './store/configureStore'\r\nconst store = configureStore()\r\nrender(<App store={store} />, document.getElementById('root'))\r\n\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}